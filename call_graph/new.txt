phaseName=wjtp.myTrans, options={enabled=true}
Recurse(<testers.Main: void main(java.lang.String[])>);
STACK SIZE:1CURRENT STACK:[<testers.Main: void main(java.lang.String[])>]
Recurse(<net.vimalpatel.test.A: void methodA2()>);
STACK SIZE:2CURRENT STACK:[<testers.Main: void main(java.lang.String[])>, <net.vimalpatel.test.A: void methodA2()>]
Recurse(<net.vimalpatel.test.A: void methodC()>);
STACK SIZE:3CURRENT STACK:[<testers.Main: void main(java.lang.String[])>, <net.vimalpatel.test.A: void methodA2()>, <net.vimalpatel.test.A: void methodC()>]
Recurse(<net.vimalpatel.test.B: void methodB()>);
STACK SIZE:4CURRENT STACK:[<testers.Main: void main(java.lang.String[])>, <net.vimalpatel.test.A: void methodA2()>, <net.vimalpatel.test.A: void methodC()>, <net.vimalpatel.test.B: void methodB()>]
	currentMethodSignature == TargetMethodSignature
the return value from the call graph is:1
#########   now the stack has all the methods   ##########
STARTING WITH METHOD:<testers.Main: void main(java.lang.String[])>
BODY TYPE:soot.jimple.JimpleBody
	HEAD UNIT:soot.jimple.internal.JIdentityStmt
	TAIL UNIT:soot.jimple.internal.JReturnVoidStmt
	UNIT:soot.jimple.internal.JIdentityStmt
	UNIT:soot.jimple.internal.JAssignStmt
	UNIT:soot.jimple.internal.JInvokeStmt
		InvokeStmt Calls Method:<init>==<com.webc.databaseUtils.DataBaseManager: void <init>(java.lang.String,java.lang.String,java.lang.String)>
	UNIT:soot.jimple.internal.JAssignStmt
	UNIT:soot.jimple.internal.JAssignStmt
	UNIT:soot.jimple.internal.JAssignStmt
	UNIT:soot.jimple.internal.JInvokeStmt
		InvokeStmt Calls Method:<init>==<com.webc.utils.QueueManager: void <init>(com.webc.databaseUtils.DataBaseManager)>
	UNIT:soot.jimple.internal.JAssignStmt
	UNIT:soot.jimple.internal.JAssignStmt
	UNIT:soot.jimple.internal.JInvokeStmt
		InvokeStmt Calls Method:AddUrl==<com.webc.utils.QueueManager: void AddUrl(java.lang.String)>
	UNIT:soot.jimple.internal.JAssignStmt
	UNIT:soot.jimple.internal.JAssignStmt
	UNIT:soot.jimple.internal.JAssignStmt
	UNIT:soot.jimple.internal.JInvokeStmt
		InvokeStmt Calls Method:<init>==<com.webc.downloader.HtmlDownloader: void <init>(com.webc.utils.QueueManager,com.webc.databaseUtils.DataBaseManager)>
	UNIT:soot.jimple.internal.JAssignStmt
	UNIT:soot.jimple.internal.JAssignStmt
	UNIT:soot.jimple.internal.JAssignStmt
	UNIT:soot.jimple.internal.JInvokeStmt
		InvokeStmt Calls Method:<init>==<java.lang.Thread: void <init>(java.lang.Runnable)>
	UNIT:soot.jimple.internal.JAssignStmt
	UNIT:soot.jimple.internal.JInvokeStmt
		InvokeStmt Calls Method:start==<java.lang.Thread: void start()>
	UNIT:soot.jimple.internal.JAssignStmt
	UNIT:soot.jimple.internal.JInvokeStmt
		InvokeStmt Calls Method:<init>==<net.vimalpatel.test.A: void <init>()>
	UNIT:soot.jimple.internal.JAssignStmt
	UNIT:soot.jimple.internal.JInvokeStmt
		InvokeStmt Calls Method:methodA==<net.vimalpatel.test.A: void methodA()>
	UNIT:soot.jimple.internal.JInvokeStmt
		InvokeStmt Calls Method:methodA2==<net.vimalpatel.test.A: void methodA2()>
		CALLED METHOD SIGNATURE MATCHES NEXT METHOD SIGNATURE.
PATH UNITS:[r0 := @parameter0: java.lang.String[], $r1 = new com.webc.databaseUtils.DataBaseManager, specialinvoke $r1.<com.webc.databaseUtils.DataBaseManager: void <init>(java.lang.String,java.lang.String,java.lang.String)>("webcrawler", "root", "root"), <testers.Main: com.webc.databaseUtils.DataBaseManager database> = $r1, $r4 = new com.webc.utils.QueueManager, $r5 = <testers.Main: com.webc.databaseUtils.DataBaseManager database>, specialinvoke $r4.<com.webc.utils.QueueManager: void <init>(com.webc.databaseUtils.DataBaseManager)>($r5), <testers.Main: com.webc.utils.QueueManager queueManager> = $r4, $r6 = <testers.Main: com.webc.utils.QueueManager queueManager>, virtualinvoke $r6.<com.webc.utils.QueueManager: void AddUrl(java.lang.String)>("http://java.sun.com/docs/books/tutorial/jdbc/basics/index.html"), $r7 = new com.webc.downloader.HtmlDownloader, $r8 = <testers.Main: com.webc.utils.QueueManager queueManager>, $r9 = <testers.Main: com.webc.databaseUtils.DataBaseManager database>, specialinvoke $r7.<com.webc.downloader.HtmlDownloader: void <init>(com.webc.utils.QueueManager,com.webc.databaseUtils.DataBaseManager)>($r8, $r9), <testers.Main: com.webc.downloader.HtmlDownloader htmlDownloader> = $r7, $r10 = new java.lang.Thread, $r11 = <testers.Main: com.webc.downloader.HtmlDownloader htmlDownloader>, specialinvoke $r10.<java.lang.Thread: void <init>(java.lang.Runnable)>($r11), r2 = $r10, virtualinvoke r2.<java.lang.Thread: void start()>(), $r12 = new net.vimalpatel.test.A, specialinvoke $r12.<net.vimalpatel.test.A: void <init>()>(), r3 = $r12, virtualinvoke r3.<net.vimalpatel.test.A: void methodA()>(), virtualinvoke r3.<net.vimalpatel.test.A: void methodA2()>()]
STARTING WITH METHOD:<net.vimalpatel.test.A: void methodA2()>
BODY TYPE:soot.jimple.JimpleBody
	HEAD UNIT:soot.jimple.internal.JIdentityStmt
	TAIL UNIT:soot.jimple.internal.JReturnVoidStmt
	UNIT:soot.jimple.internal.JIdentityStmt
	UNIT:soot.jimple.internal.JInvokeStmt
		InvokeStmt Calls Method:methodC==<net.vimalpatel.test.A: void methodC()>
		CALLED METHOD SIGNATURE MATCHES NEXT METHOD SIGNATURE.
PATH UNITS:[r0 := @this: net.vimalpatel.test.A, specialinvoke r0.<net.vimalpatel.test.A: void methodC()>()]
STARTING WITH METHOD:<net.vimalpatel.test.A: void methodC()>
BODY TYPE:soot.jimple.JimpleBody
	HEAD UNIT:soot.jimple.internal.JIdentityStmt
	TAIL UNIT:soot.jimple.internal.JReturnVoidStmt
	UNIT:soot.jimple.internal.JIdentityStmt
	UNIT:soot.jimple.internal.JAssignStmt
	UNIT:soot.jimple.internal.JInvokeStmt
		InvokeStmt Calls Method:<init>==<net.vimalpatel.test.B: void <init>()>
	UNIT:soot.jimple.internal.JAssignStmt
	UNIT:soot.jimple.internal.JInvokeStmt
		InvokeStmt Calls Method:methodB==<net.vimalpatel.test.B: void methodB()>
		CALLED METHOD SIGNATURE MATCHES NEXT METHOD SIGNATURE.
PATH UNITS:[r0 := @this: net.vimalpatel.test.A, $r1 = new net.vimalpatel.test.B, specialinvoke $r1.<net.vimalpatel.test.B: void <init>()>(), r2 = $r1, virtualinvoke r2.<net.vimalpatel.test.B: void methodB()>()]
UNIT:r0 := @parameter0: java.lang.String[], LINE NO:33
UNIT:$r1 = new com.webc.databaseUtils.DataBaseManager, LINE NO:33
UNIT:specialinvoke $r1.<com.webc.databaseUtils.DataBaseManager: void <init>(java.lang.String,java.lang.String,java.lang.String)>("webcrawler", "root", "root"), LINE NO:33
UNIT:<testers.Main: com.webc.databaseUtils.DataBaseManager database> = $r1, LINE NO:33
UNIT:$r4 = new com.webc.utils.QueueManager, LINE NO:34
UNIT:$r5 = <testers.Main: com.webc.databaseUtils.DataBaseManager database>, LINE NO:34
UNIT:specialinvoke $r4.<com.webc.utils.QueueManager: void <init>(com.webc.databaseUtils.DataBaseManager)>($r5), LINE NO:34
UNIT:<testers.Main: com.webc.utils.QueueManager queueManager> = $r4, LINE NO:34
UNIT:$r6 = <testers.Main: com.webc.utils.QueueManager queueManager>, LINE NO:35
UNIT:virtualinvoke $r6.<com.webc.utils.QueueManager: void AddUrl(java.lang.String)>("http://java.sun.com/docs/books/tutorial/jdbc/basics/index.html"), LINE NO:35
UNIT:$r7 = new com.webc.downloader.HtmlDownloader, LINE NO:36
UNIT:$r8 = <testers.Main: com.webc.utils.QueueManager queueManager>, LINE NO:36
UNIT:$r9 = <testers.Main: com.webc.databaseUtils.DataBaseManager database>, LINE NO:36
UNIT:specialinvoke $r7.<com.webc.downloader.HtmlDownloader: void <init>(com.webc.utils.QueueManager,com.webc.databaseUtils.DataBaseManager)>($r8, $r9), LINE NO:36
UNIT:<testers.Main: com.webc.downloader.HtmlDownloader htmlDownloader> = $r7, LINE NO:36
UNIT:$r10 = new java.lang.Thread, LINE NO:40
UNIT:$r11 = <testers.Main: com.webc.downloader.HtmlDownloader htmlDownloader>, LINE NO:40
UNIT:specialinvoke $r10.<java.lang.Thread: void <init>(java.lang.Runnable)>($r11), LINE NO:40
UNIT:r2 = $r10, LINE NO:40
UNIT:virtualinvoke r2.<java.lang.Thread: void start()>(), LINE NO:44
UNIT:$r12 = new net.vimalpatel.test.A, LINE NO:47
UNIT:specialinvoke $r12.<net.vimalpatel.test.A: void <init>()>(), LINE NO:47
UNIT:r3 = $r12, LINE NO:47
UNIT:virtualinvoke r3.<net.vimalpatel.test.A: void methodA()>(), LINE NO:48
UNIT:virtualinvoke r3.<net.vimalpatel.test.A: void methodA2()>(), LINE NO:49
UNIT:r0 := @this: net.vimalpatel.test.A, LINE NO:17
UNIT:specialinvoke r0.<net.vimalpatel.test.A: void methodC()>(), LINE NO:17
UNIT:r0 := @this: net.vimalpatel.test.A, LINE NO:20
UNIT:$r1 = new net.vimalpatel.test.B, LINE NO:20
UNIT:specialinvoke $r1.<net.vimalpatel.test.B: void <init>()>(), LINE NO:20
UNIT:r2 = $r1, LINE NO:20
UNIT:virtualinvoke r2.<net.vimalpatel.test.B: void methodB()>(), LINE NO:21
