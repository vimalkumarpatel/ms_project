public class com.webc.utils.Logger extends java.lang.Object
{
    private static java.io.File f;
    static java.io.PrintWriter pw;

    static void <clinit>()
    {
        java.io.File temp$0, temp$2, temp$4;
        java.io.PrintWriter temp$1, temp$6, temp$7, temp$10;
        java.io.FileWriter fw, temp$3;
        java.io.BufferedWriter bw, temp$5;
        java.util.Date temp$8, temp$12;
        java.lang.String temp$9, temp$14;
        java.lang.StringBuffer temp$11;
        long temp$13;
        java.lang.Exception e;

        temp$0 = null;
        <com.webc.utils.Logger: java.io.File f> = temp$0;
        temp$1 = null;
        <com.webc.utils.Logger: java.io.PrintWriter pw> = temp$1;

     label0:
        nop;
        temp$2 = new java.io.File;
        specialinvoke temp$2.<java.io.File: void <init>(java.lang.String)>("WebCrawlerLogging.log");
        <com.webc.utils.Logger: java.io.File f> = temp$2;
        temp$3 = new java.io.FileWriter;
        temp$4 = <com.webc.utils.Logger: java.io.File f>;
        specialinvoke temp$3.<java.io.FileWriter: void <init>(java.io.File,boolean)>(temp$4, 1);
        fw = temp$3;
        temp$5 = new java.io.BufferedWriter;
        specialinvoke temp$5.<java.io.BufferedWriter: void <init>(java.io.Writer)>(fw);
        bw = temp$5;
        temp$6 = new java.io.PrintWriter;
        specialinvoke temp$6.<java.io.PrintWriter: void <init>(java.io.Writer)>(bw);
        <com.webc.utils.Logger: java.io.PrintWriter pw> = temp$6;
        temp$7 = <com.webc.utils.Logger: java.io.PrintWriter pw>;
        temp$8 = new java.util.Date;
        specialinvoke temp$8.<java.util.Date: void <init>()>();
        temp$9 = virtualinvoke temp$8.<java.util.Date: java.lang.String toString()>();
        virtualinvoke temp$7.<java.io.PrintWriter: void println(java.lang.String)>(temp$9);
        temp$10 = <com.webc.utils.Logger: java.io.PrintWriter pw>;
        temp$11 = new java.lang.StringBuffer;
        specialinvoke temp$11.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("Starting Up Logging for WebCrawler at time:");
        temp$12 = new java.util.Date;
        temp$13 = staticinvoke <java.lang.System: long currentTimeMillis()>();
        specialinvoke temp$12.<java.util.Date: void <init>(long)>(temp$13);
        virtualinvoke temp$11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$12);
        temp$14 = virtualinvoke temp$11.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke temp$10.<java.io.PrintWriter: void println(java.lang.String)>(temp$14);
        goto label2;

     label1:
        nop;
        e := @caughtexception;
        nop;
        goto label2;

     label2:
        nop;
        return;

        catch java.lang.Exception from label0 to label1 with label1;
    }

    private static final void writeLogTime()
    {
        java.io.PrintWriter temp$0;
        java.lang.StringBuffer temp$1;
        java.util.Date temp$2;
        java.lang.String temp$3, temp$4;

        temp$0 = <com.webc.utils.Logger: java.io.PrintWriter pw>;
        temp$1 = new java.lang.StringBuffer;
        specialinvoke temp$1.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("[");
        temp$2 = new java.util.Date;
        specialinvoke temp$2.<java.util.Date: void <init>()>();
        temp$3 = virtualinvoke temp$2.<java.util.Date: java.lang.String toString()>();
        virtualinvoke temp$1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$3);
        virtualinvoke temp$1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("]");
        temp$4 = virtualinvoke temp$1.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke temp$0.<java.io.PrintWriter: void write(java.lang.String)>(temp$4);
        return;
    }

    public static void log(java.lang.String)
    {
        java.lang.String msg;
        java.io.PrintWriter temp$0;

        msg := @parameter0: java.lang.String;
        staticinvoke <com.webc.utils.Logger: void writeLogTime()>();
        staticinvoke <com.webc.utils.Logger: void writeLoggingClass()>();
        temp$0 = <com.webc.utils.Logger: java.io.PrintWriter pw>;
        virtualinvoke temp$0.<java.io.PrintWriter: void write(java.lang.String)>(msg);
        return;
    }

    private static final void writeLoggingClass()
    {
        java.lang.Exception temp$0, e;
        java.lang.StackTraceElement[] st, temp$1, temp$4;
        java.io.PrintWriter temp$2;
        java.lang.StringBuffer temp$3;
        int temp$5;
        java.lang.StackTraceElement temp$6;
        java.lang.String temp$7, temp$8;

     label0:
        nop;
        temp$0 = new java.lang.Exception;
        specialinvoke temp$0.<java.lang.Exception: void <init>()>();
        throw temp$0;

     label1:
        nop;
        e := @caughtexception;
        temp$1 = virtualinvoke e.<java.lang.Exception: java.lang.StackTraceElement[] getStackTrace()>();
        st = temp$1;
        temp$2 = <com.webc.utils.Logger: java.io.PrintWriter pw>;
        temp$3 = new java.lang.StringBuffer;
        specialinvoke temp$3.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("FROM CLASS: ");
        temp$4 = st;
        temp$5 = 0;
        temp$6 = temp$4[temp$5];
        temp$7 = virtualinvoke temp$6.<java.lang.StackTraceElement: java.lang.String getClassName()>();
        virtualinvoke temp$3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$7);
        temp$8 = virtualinvoke temp$3.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke temp$2.<java.io.PrintWriter: void write(java.lang.String)>(temp$8);
        nop;
        goto label2;

     label2:
        nop;
        return;

        catch java.lang.Exception from label0 to label1 with label1;
    }

    public static void log(java.lang.Exception)
    {
        java.lang.Exception e;
        java.io.PrintWriter temp$0;

        e := @parameter0: java.lang.Exception;
        staticinvoke <com.webc.utils.Logger: void writeLogTime()>();
        staticinvoke <com.webc.utils.Logger: void writeLoggingClass()>();
        temp$0 = <com.webc.utils.Logger: java.io.PrintWriter pw>;
        virtualinvoke e.<java.lang.Exception: void printStackTrace(java.io.PrintWriter)>(temp$0);
        return;
    }

    public static void log()
    {
        return;
    }

    public static void main(java.lang.String[]) throws java.io.IOException
    {
        java.lang.String[] args;
        java.io.PrintStream temp$0, temp$10;
        java.io.File temp$1, temp$5, ff, temp$6;
        java.lang.String temp$2, temp$11;
        java.io.IOException temp$3;
        java.io.PrintWriter temp$4;
        java.io.FileInputStream fis, temp$7;
        java.io.DataInputStream dis, temp$8;
        int temp$9;

        args := @parameter0: java.lang.String[];
        temp$0 = <java.lang.System: java.io.PrintStream out>;
        temp$1 = <com.webc.utils.Logger: java.io.File f>;
        temp$2 = virtualinvoke temp$1.<java.io.File: java.lang.String getAbsolutePath()>();
        virtualinvoke temp$0.<java.io.PrintStream: void println(java.lang.String)>(temp$2);
        temp$3 = new java.io.IOException;
        specialinvoke temp$3.<java.io.IOException: void <init>()>();
        staticinvoke <com.webc.utils.Logger: void log(java.lang.Exception)>(temp$3);
        temp$4 = <com.webc.utils.Logger: java.io.PrintWriter pw>;
        virtualinvoke temp$4.<java.io.PrintWriter: void close()>();
        temp$5 = null;
        <com.webc.utils.Logger: java.io.File f> = temp$5;
        temp$6 = new java.io.File;
        specialinvoke temp$6.<java.io.File: void <init>(java.lang.String)>("WebCrawlerLogging.log");
        ff = temp$6;
        temp$7 = new java.io.FileInputStream;
        specialinvoke temp$7.<java.io.FileInputStream: void <init>(java.io.File)>(ff);
        fis = temp$7;
        temp$8 = new java.io.DataInputStream;
        specialinvoke temp$8.<java.io.DataInputStream: void <init>(java.io.InputStream)>(fis);
        dis = temp$8;

     label0:
        nop;
        temp$9 = virtualinvoke dis.<java.io.DataInputStream: int available()>();
        if temp$9 > 0 goto label1;

        goto label2;

     label1:
        nop;
        temp$10 = <java.lang.System: java.io.PrintStream out>;
        temp$11 = virtualinvoke dis.<java.io.DataInputStream: java.lang.String readLine()>();
        virtualinvoke temp$10.<java.io.PrintStream: void println(java.lang.String)>(temp$11);
        goto label0;

     label2:
        nop;
        virtualinvoke dis.<java.io.DataInputStream: void close()>();
        return;
    }

    public static java.io.PrintWriter getPrintWriter()
    {
        java.io.PrintWriter temp$0;

        temp$0 = <com.webc.utils.Logger: java.io.PrintWriter pw>;
        return temp$0;
    }

    public void <init>()
    {
        com.webc.utils.Logger this;

        this := @this: com.webc.utils.Logger;
        specialinvoke this.<java.lang.Object: void <init>()>();
        return;
    }
}
