public class com.webc.databaseUtils.DataBaseManager extends java.lang.Object
{
    java.lang.String dbName;
    java.lang.String dbUser;
    java.lang.String dbPassword;
    java.sql.CallableStatement callableStmt;
    javax.sql.ConnectionPoolDataSource connPool;
    public static java.lang.Class class$com$webc$databaseUtils$DataBaseManager;

    public void <init>(java.lang.String, java.lang.String, java.lang.String) throws java.sql.SQLException
    {
        com.webc.databaseUtils.DataBaseManager this;
        java.lang.String dbNname, dbUser, dbPassword;

        this := @this: com.webc.databaseUtils.DataBaseManager;
        dbNname := @parameter0: java.lang.String;
        dbUser := @parameter1: java.lang.String;
        dbPassword := @parameter2: java.lang.String;
        specialinvoke this.<java.lang.Object: void <init>()>();
        this.<com.webc.databaseUtils.DataBaseManager: java.lang.String dbName> = dbNname;
        this.<com.webc.databaseUtils.DataBaseManager: java.lang.String dbUser> = dbUser;
        this.<com.webc.databaseUtils.DataBaseManager: java.lang.String dbPassword> = dbPassword;
        return;
    }

    public void _connect(java.lang.String, java.lang.String, java.lang.String)
    {
        com.webc.databaseUtils.DataBaseManager this;
        java.lang.String dbNname, dbUser, dbPassword;

        this := @this: com.webc.databaseUtils.DataBaseManager;
        dbNname := @parameter0: java.lang.String;
        dbUser := @parameter1: java.lang.String;
        dbPassword := @parameter2: java.lang.String;
        this.<com.webc.databaseUtils.DataBaseManager: java.lang.String dbName> = dbNname;
        this.<com.webc.databaseUtils.DataBaseManager: java.lang.String dbUser> = dbUser;
        this.<com.webc.databaseUtils.DataBaseManager: java.lang.String dbPassword> = dbPassword;
        return;
    }

    public void storePageContent(java.lang.String, java.lang.String)
    {
        com.webc.databaseUtils.DataBaseManager this;
        java.lang.String Url, text, temp$2, temp$11, temp$16, temp$21, temp$22, temp$25, temp$26, temp$30;
        java.sql.Connection conn, temp$3;
        java.io.PrintStream temp$0, temp$9, temp$19, temp$23, temp$27;
        java.lang.StringBuffer temp$1, temp$10, temp$20, temp$24, temp$28;
        java.sql.CallableStatement temp$4, temp$5, temp$6, temp$7, temp$12;
        boolean r, temp$8;
        java.lang.Exception e, e, e;
        java.sql.SQLException E;
        java.lang.Class temp$13, temp$14, temp$15;
        java.util.logging.Logger temp$17;
        java.util.logging.Level temp$18;
        int temp$29;
        java.lang.Throwable temp$31;

        this := @this: com.webc.databaseUtils.DataBaseManager;
        Url := @parameter0: java.lang.String;
        text := @parameter1: java.lang.String;
        conn = null;

     label0:
        nop;
        temp$0 = <java.lang.System: java.io.PrintStream out>;
        temp$1 = new java.lang.StringBuffer;
        specialinvoke temp$1.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("CALL `webcrawler`.`ProcInsertPageContent` (");
        virtualinvoke temp$1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(Url);
        virtualinvoke temp$1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(",");
        virtualinvoke temp$1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(text);
        virtualinvoke temp$1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(")");
        temp$2 = virtualinvoke temp$1.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke temp$0.<java.io.PrintStream: void print(java.lang.String)>(temp$2);
        temp$3 = staticinvoke <com.webc.databaseUtils.Pool: java.sql.Connection getConnection()>();
        conn = temp$3;
        temp$4 = interfaceinvoke conn.<java.sql.Connection: java.sql.CallableStatement prepareCall(java.lang.String)>("{ call ProcInsertPageContent(?, ?) }");
        this.<com.webc.databaseUtils.DataBaseManager: java.sql.CallableStatement callableStmt> = temp$4;
        temp$5 = this.<com.webc.databaseUtils.DataBaseManager: java.sql.CallableStatement callableStmt>;
        interfaceinvoke temp$5.<java.sql.CallableStatement: void setString(int,java.lang.String)>(1, Url);
        temp$6 = this.<com.webc.databaseUtils.DataBaseManager: java.sql.CallableStatement callableStmt>;
        interfaceinvoke temp$6.<java.sql.CallableStatement: void setString(int,java.lang.String)>(2, text);
        temp$7 = this.<com.webc.databaseUtils.DataBaseManager: java.sql.CallableStatement callableStmt>;
        temp$8 = interfaceinvoke temp$7.<java.sql.CallableStatement: boolean execute()>();
        r = temp$8;
        temp$9 = <java.lang.System: java.io.PrintStream out>;
        temp$10 = new java.lang.StringBuffer;
        specialinvoke temp$10.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(" =>> ");
        virtualinvoke temp$10.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>(r);
        temp$11 = virtualinvoke temp$10.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke temp$9.<java.io.PrintStream: void println(java.lang.String)>(temp$11);
        temp$12 = this.<com.webc.databaseUtils.DataBaseManager: java.sql.CallableStatement callableStmt>;
        interfaceinvoke temp$12.<java.sql.CallableStatement: void close()>();

     label1:
        nop;
        if conn != null goto label2;

        goto label6;

     label2:
        nop;

     label3:
        nop;
        interfaceinvoke conn.<java.sql.Connection: void close()>();
        goto label5;

     label4:
        nop;
        e := @caughtexception;
        nop;
        goto label5;

     label5:
        nop;

     label6:
        nop;
        goto label22;

     label7:
        nop;
        E := @caughtexception;
        temp$14 = <com.webc.databaseUtils.DataBaseManager: java.lang.Class class$com$webc$databaseUtils$DataBaseManager>;
        if temp$14 != null goto label8;

        temp$15 = staticinvoke <com.webc.databaseUtils.DataBaseManager: java.lang.Class class$(java.lang.String)>("com.webc.databaseUtils.DataBaseManager");
        <com.webc.databaseUtils.DataBaseManager: java.lang.Class class$com$webc$databaseUtils$DataBaseManager> = temp$15;
        temp$13 = temp$15;
        goto label9;

     label8:
        nop;
        temp$13 = <com.webc.databaseUtils.DataBaseManager: java.lang.Class class$com$webc$databaseUtils$DataBaseManager>;

     label9:
        nop;
        temp$16 = virtualinvoke temp$13.<java.lang.Class: java.lang.String getName()>();
        temp$17 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>(temp$16);
        temp$18 = <java.util.logging.Level: java.util.logging.Level SEVERE>;
        virtualinvoke temp$17.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>(temp$18, null, E);
        virtualinvoke E.<java.sql.SQLException: void printStackTrace()>();
        temp$19 = <java.lang.System: java.io.PrintStream out>;
        temp$20 = new java.lang.StringBuffer;
        specialinvoke temp$20.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("SQLException: ");
        temp$21 = virtualinvoke E.<java.sql.SQLException: java.lang.String getMessage()>();
        virtualinvoke temp$20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$21);
        temp$22 = virtualinvoke temp$20.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke temp$19.<java.io.PrintStream: void println(java.lang.String)>(temp$22);
        temp$23 = <java.lang.System: java.io.PrintStream out>;
        temp$24 = new java.lang.StringBuffer;
        specialinvoke temp$24.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("SQLState:     ");
        temp$25 = virtualinvoke E.<java.sql.SQLException: java.lang.String getSQLState()>();
        virtualinvoke temp$24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$25);
        temp$26 = virtualinvoke temp$24.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke temp$23.<java.io.PrintStream: void println(java.lang.String)>(temp$26);
        temp$27 = <java.lang.System: java.io.PrintStream out>;
        temp$28 = new java.lang.StringBuffer;
        specialinvoke temp$28.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("VendorError:  ");
        temp$29 = virtualinvoke E.<java.sql.SQLException: int getErrorCode()>();
        virtualinvoke temp$28.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(temp$29);
        temp$30 = virtualinvoke temp$28.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke temp$27.<java.io.PrintStream: void println(java.lang.String)>(temp$30);

     label10:
        nop;
        if conn != null goto label11;

        goto label15;

     label11:
        nop;

     label12:
        nop;
        interfaceinvoke conn.<java.sql.Connection: void close()>();
        goto label14;

     label13:
        nop;
        e := @caughtexception;
        nop;
        goto label14;

     label14:
        nop;

     label15:
        nop;
        goto label22;

     label16:
        nop;
        temp$31 := @caughtexception;
        if conn != null goto label17;

        goto label21;

     label17:
        nop;

     label18:
        nop;
        interfaceinvoke conn.<java.sql.Connection: void close()>();
        goto label20;

     label19:
        nop;
        e := @caughtexception;
        nop;
        goto label20;

     label20:
        nop;

     label21:
        nop;
        throw temp$31;

     label22:
        nop;
        return;

        catch java.lang.Exception from label3 to label4 with label4;
        catch java.lang.Exception from label12 to label13 with label13;
        catch java.lang.Exception from label18 to label19 with label19;
        catch java.sql.SQLException from label0 to label1 with label7;
        catch java.lang.Throwable from label0 to label1 with label16;
        catch java.lang.Throwable from label1 to label10 with label16;
    }

    public void storeLinkPair(java.lang.String, java.lang.String)
    {
        com.webc.databaseUtils.DataBaseManager this;
        java.lang.String urlSrc, urlDest, temp$8, temp$13, temp$18, temp$19, temp$22, temp$23, temp$27;
        java.sql.Connection conn, temp$0;
        java.sql.CallableStatement temp$1, temp$2, temp$3, temp$4, temp$9;
        boolean r, temp$5;
        java.io.PrintStream temp$6, temp$16, temp$20, temp$24;
        java.lang.StringBuffer temp$7, temp$17, temp$21, temp$25;
        java.lang.Exception e, e, e;
        java.sql.SQLException E;
        java.lang.Class temp$10, temp$11, temp$12;
        java.util.logging.Logger temp$14;
        java.util.logging.Level temp$15;
        int temp$26;
        java.lang.Throwable temp$28;

        this := @this: com.webc.databaseUtils.DataBaseManager;
        urlSrc := @parameter0: java.lang.String;
        urlDest := @parameter1: java.lang.String;
        conn = null;

     label0:
        nop;
        temp$0 = staticinvoke <com.webc.databaseUtils.Pool: java.sql.Connection getConnection()>();
        conn = temp$0;
        temp$1 = interfaceinvoke conn.<java.sql.Connection: java.sql.CallableStatement prepareCall(java.lang.String)>("{ call InsertLinkPair(?, ?) }");
        this.<com.webc.databaseUtils.DataBaseManager: java.sql.CallableStatement callableStmt> = temp$1;
        temp$2 = this.<com.webc.databaseUtils.DataBaseManager: java.sql.CallableStatement callableStmt>;
        interfaceinvoke temp$2.<java.sql.CallableStatement: void setString(int,java.lang.String)>(1, urlSrc);
        temp$3 = this.<com.webc.databaseUtils.DataBaseManager: java.sql.CallableStatement callableStmt>;
        interfaceinvoke temp$3.<java.sql.CallableStatement: void setString(int,java.lang.String)>(2, urlDest);
        temp$4 = this.<com.webc.databaseUtils.DataBaseManager: java.sql.CallableStatement callableStmt>;
        temp$5 = interfaceinvoke temp$4.<java.sql.CallableStatement: boolean execute()>();
        r = temp$5;
        temp$6 = <java.lang.System: java.io.PrintStream out>;
        temp$7 = new java.lang.StringBuffer;
        specialinvoke temp$7.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("CALL InsertLinkPair(");
        virtualinvoke temp$7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(urlSrc);
        virtualinvoke temp$7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(",");
        virtualinvoke temp$7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(urlDest);
        virtualinvoke temp$7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(") == ");
        virtualinvoke temp$7.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>(r);
        temp$8 = virtualinvoke temp$7.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke temp$6.<java.io.PrintStream: void println(java.lang.String)>(temp$8);
        interfaceinvoke conn.<java.sql.Connection: void close()>();
        temp$9 = this.<com.webc.databaseUtils.DataBaseManager: java.sql.CallableStatement callableStmt>;
        interfaceinvoke temp$9.<java.sql.CallableStatement: void close()>();

     label1:
        nop;
        if conn != null goto label2;

        goto label6;

     label2:
        nop;

     label3:
        nop;
        interfaceinvoke conn.<java.sql.Connection: void close()>();
        goto label5;

     label4:
        nop;
        e := @caughtexception;
        nop;
        goto label5;

     label5:
        nop;

     label6:
        nop;
        goto label22;

     label7:
        nop;
        E := @caughtexception;
        temp$11 = <com.webc.databaseUtils.DataBaseManager: java.lang.Class class$com$webc$databaseUtils$DataBaseManager>;
        if temp$11 != null goto label8;

        temp$12 = staticinvoke <com.webc.databaseUtils.DataBaseManager: java.lang.Class class$(java.lang.String)>("com.webc.databaseUtils.DataBaseManager");
        <com.webc.databaseUtils.DataBaseManager: java.lang.Class class$com$webc$databaseUtils$DataBaseManager> = temp$12;
        temp$10 = temp$12;
        goto label9;

     label8:
        nop;
        temp$10 = <com.webc.databaseUtils.DataBaseManager: java.lang.Class class$com$webc$databaseUtils$DataBaseManager>;

     label9:
        nop;
        temp$13 = virtualinvoke temp$10.<java.lang.Class: java.lang.String getName()>();
        temp$14 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>(temp$13);
        temp$15 = <java.util.logging.Level: java.util.logging.Level SEVERE>;
        virtualinvoke temp$14.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>(temp$15, null, E);
        virtualinvoke E.<java.sql.SQLException: void printStackTrace()>();
        temp$16 = <java.lang.System: java.io.PrintStream out>;
        temp$17 = new java.lang.StringBuffer;
        specialinvoke temp$17.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("SQLException: ");
        temp$18 = virtualinvoke E.<java.sql.SQLException: java.lang.String getMessage()>();
        virtualinvoke temp$17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$18);
        temp$19 = virtualinvoke temp$17.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke temp$16.<java.io.PrintStream: void println(java.lang.String)>(temp$19);
        temp$20 = <java.lang.System: java.io.PrintStream out>;
        temp$21 = new java.lang.StringBuffer;
        specialinvoke temp$21.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("SQLState:     ");
        temp$22 = virtualinvoke E.<java.sql.SQLException: java.lang.String getSQLState()>();
        virtualinvoke temp$21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$22);
        temp$23 = virtualinvoke temp$21.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke temp$20.<java.io.PrintStream: void println(java.lang.String)>(temp$23);
        temp$24 = <java.lang.System: java.io.PrintStream out>;
        temp$25 = new java.lang.StringBuffer;
        specialinvoke temp$25.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("VendorError:  ");
        temp$26 = virtualinvoke E.<java.sql.SQLException: int getErrorCode()>();
        virtualinvoke temp$25.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(temp$26);
        temp$27 = virtualinvoke temp$25.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke temp$24.<java.io.PrintStream: void println(java.lang.String)>(temp$27);

     label10:
        nop;
        if conn != null goto label11;

        goto label15;

     label11:
        nop;

     label12:
        nop;
        interfaceinvoke conn.<java.sql.Connection: void close()>();
        goto label14;

     label13:
        nop;
        e := @caughtexception;
        nop;
        goto label14;

     label14:
        nop;

     label15:
        nop;
        goto label22;

     label16:
        nop;
        temp$28 := @caughtexception;
        if conn != null goto label17;

        goto label21;

     label17:
        nop;

     label18:
        nop;
        interfaceinvoke conn.<java.sql.Connection: void close()>();
        goto label20;

     label19:
        nop;
        e := @caughtexception;
        nop;
        goto label20;

     label20:
        nop;

     label21:
        nop;
        throw temp$28;

     label22:
        nop;
        return;

        catch java.lang.Exception from label3 to label4 with label4;
        catch java.lang.Exception from label12 to label13 with label13;
        catch java.lang.Exception from label18 to label19 with label19;
        catch java.sql.SQLException from label0 to label1 with label7;
        catch java.lang.Throwable from label0 to label1 with label16;
        catch java.lang.Throwable from label1 to label10 with label16;
    }

    public void executeInsertQuery(java.lang.String)
    {
        com.webc.databaseUtils.DataBaseManager this;
        java.lang.String myQuery, temp$4, temp$7, temp$8, temp$11, temp$12, temp$16;
        java.sql.Connection conn;
        java.sql.PreparedStatement st, temp$0;
        int result, temp$1, temp$15;
        java.io.PrintStream temp$2, temp$5, temp$9, temp$13;
        java.lang.StringBuffer temp$3, temp$6, temp$10, temp$14;
        java.lang.Exception e, e, e;
        java.sql.SQLException E;
        java.lang.Throwable temp$17;

        this := @this: com.webc.databaseUtils.DataBaseManager;
        myQuery := @parameter0: java.lang.String;
        conn = null;

     label0:
        nop;
        temp$0 = interfaceinvoke conn.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>(myQuery);
        st = temp$0;
        temp$1 = interfaceinvoke st.<java.sql.PreparedStatement: int executeUpdate()>();
        result = temp$1;
        temp$2 = <java.lang.System: java.io.PrintStream out>;
        temp$3 = new java.lang.StringBuffer;
        specialinvoke temp$3.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("Result of [");
        virtualinvoke temp$3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(myQuery);
        virtualinvoke temp$3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("]=");
        virtualinvoke temp$3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(result);
        temp$4 = virtualinvoke temp$3.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke temp$2.<java.io.PrintStream: void println(java.lang.String)>(temp$4);

     label1:
        nop;
        if conn != null goto label2;

        goto label6;

     label2:
        nop;

     label3:
        nop;
        interfaceinvoke conn.<java.sql.Connection: void close()>();
        goto label5;

     label4:
        nop;
        e := @caughtexception;
        nop;
        goto label5;

     label5:
        nop;

     label6:
        nop;
        goto label20;

     label7:
        nop;
        E := @caughtexception;
        temp$5 = <java.lang.System: java.io.PrintStream out>;
        temp$6 = new java.lang.StringBuffer;
        specialinvoke temp$6.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("SQLException: ");
        temp$7 = virtualinvoke E.<java.sql.SQLException: java.lang.String getMessage()>();
        virtualinvoke temp$6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$7);
        temp$8 = virtualinvoke temp$6.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke temp$5.<java.io.PrintStream: void println(java.lang.String)>(temp$8);
        temp$9 = <java.lang.System: java.io.PrintStream out>;
        temp$10 = new java.lang.StringBuffer;
        specialinvoke temp$10.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("SQLState:     ");
        temp$11 = virtualinvoke E.<java.sql.SQLException: java.lang.String getSQLState()>();
        virtualinvoke temp$10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$11);
        temp$12 = virtualinvoke temp$10.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke temp$9.<java.io.PrintStream: void println(java.lang.String)>(temp$12);
        temp$13 = <java.lang.System: java.io.PrintStream out>;
        temp$14 = new java.lang.StringBuffer;
        specialinvoke temp$14.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("VendorError:  ");
        temp$15 = virtualinvoke E.<java.sql.SQLException: int getErrorCode()>();
        virtualinvoke temp$14.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(temp$15);
        temp$16 = virtualinvoke temp$14.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke temp$13.<java.io.PrintStream: void println(java.lang.String)>(temp$16);

     label8:
        nop;
        if conn != null goto label9;

        goto label13;

     label9:
        nop;

     label10:
        nop;
        interfaceinvoke conn.<java.sql.Connection: void close()>();
        goto label12;

     label11:
        nop;
        e := @caughtexception;
        nop;
        goto label12;

     label12:
        nop;

     label13:
        nop;
        goto label20;

     label14:
        nop;
        temp$17 := @caughtexception;
        if conn != null goto label15;

        goto label19;

     label15:
        nop;

     label16:
        nop;
        interfaceinvoke conn.<java.sql.Connection: void close()>();
        goto label18;

     label17:
        nop;
        e := @caughtexception;
        nop;
        goto label18;

     label18:
        nop;

     label19:
        nop;
        throw temp$17;

     label20:
        nop;
        return;

        catch java.lang.Exception from label3 to label4 with label4;
        catch java.lang.Exception from label10 to label11 with label11;
        catch java.lang.Exception from label16 to label17 with label17;
        catch java.sql.SQLException from label0 to label1 with label7;
        catch java.lang.Throwable from label0 to label1 with label14;
        catch java.lang.Throwable from label1 to label8 with label14;
    }

    public static java.lang.Class class$(java.lang.String)
    {
        java.lang.String name, temp$2;
        java.lang.Class temp$0;
        java.lang.ClassNotFoundException e;
        java.lang.NoClassDefFoundError temp$1;

        name := @parameter0: java.lang.String;

     label0:
        nop;
        temp$0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(name);

     label1:
        nop;
        return temp$0;

     label2:
        nop;
        e := @caughtexception;
        temp$1 = new java.lang.NoClassDefFoundError;
        temp$2 = virtualinvoke e.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();
        specialinvoke temp$1.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>(temp$2);
        throw temp$1;

        catch java.lang.ClassNotFoundException from label0 to label1 with label2;
    }
}
