public class com.webc.htmlUtils.LinkExtractor extends java.lang.Object
{
    private java.util.ArrayList arrLstURL;
    private java.net.URL parentURL;
    private java.lang.String htmlpage;
    private int URLcount;
    private com.webc.utils.QueueManager qm;
    private com.webc.databaseUtils.DataBaseManager dbman;
    public static java.lang.Class class$com$webc$htmlUtils$LinkExtractor;

    public void <init>(java.lang.String, java.net.URL, com.webc.utils.QueueManager, com.webc.databaseUtils.DataBaseManager)
    {
        com.webc.htmlUtils.LinkExtractor this;
        java.lang.String html, temp$1;
        java.net.URL currURL;
        com.webc.utils.QueueManager qm;
        com.webc.databaseUtils.DataBaseManager dbman;
        java.util.ArrayList temp$0;

        this := @this: com.webc.htmlUtils.LinkExtractor;
        html := @parameter0: java.lang.String;
        currURL := @parameter1: java.net.URL;
        qm := @parameter2: com.webc.utils.QueueManager;
        dbman := @parameter3: com.webc.databaseUtils.DataBaseManager;
        specialinvoke this.<java.lang.Object: void <init>()>();
        this.<com.webc.htmlUtils.LinkExtractor: java.lang.String htmlpage> = html;
        this.<com.webc.htmlUtils.LinkExtractor: java.net.URL parentURL> = currURL;
        temp$0 = new java.util.ArrayList;
        specialinvoke temp$0.<java.util.ArrayList: void <init>()>();
        this.<com.webc.htmlUtils.LinkExtractor: java.util.ArrayList arrLstURL> = temp$0;
        this.<com.webc.htmlUtils.LinkExtractor: com.webc.utils.QueueManager qm> = qm;
        this.<com.webc.htmlUtils.LinkExtractor: com.webc.databaseUtils.DataBaseManager dbman> = dbman;
        temp$1 = virtualinvoke currURL.<java.net.URL: java.lang.String toString()>();
        virtualinvoke this.<com.webc.htmlUtils.LinkExtractor: void enlistURL(java.lang.String)>(temp$1);
        return;
    }

    public java.util.ArrayList getarrLstURL()
    {
        com.webc.htmlUtils.LinkExtractor this;
        java.util.ArrayList temp$0;

        this := @this: com.webc.htmlUtils.LinkExtractor;
        temp$0 = this.<com.webc.htmlUtils.LinkExtractor: java.util.ArrayList arrLstURL>;
        return temp$0;
    }

    public void setarrLstURL(java.util.ArrayList)
    {
        com.webc.htmlUtils.LinkExtractor this;
        java.util.ArrayList hm;

        this := @this: com.webc.htmlUtils.LinkExtractor;
        hm := @parameter0: java.util.ArrayList;
        this.<com.webc.htmlUtils.LinkExtractor: java.util.ArrayList arrLstURL> = hm;
        return;
    }

    public java.net.URL getParentURL()
    {
        com.webc.htmlUtils.LinkExtractor this;
        java.net.URL temp$0;

        this := @this: com.webc.htmlUtils.LinkExtractor;
        temp$0 = this.<com.webc.htmlUtils.LinkExtractor: java.net.URL parentURL>;
        return temp$0;
    }

    public void setParentURL(java.net.URL)
    {
        com.webc.htmlUtils.LinkExtractor this;
        java.net.URL currURL;

        this := @this: com.webc.htmlUtils.LinkExtractor;
        currURL := @parameter0: java.net.URL;
        this.<com.webc.htmlUtils.LinkExtractor: java.net.URL parentURL> = currURL;
        return;
    }

    public int getURLcount()
    {
        com.webc.htmlUtils.LinkExtractor this;
        int temp$0;

        this := @this: com.webc.htmlUtils.LinkExtractor;
        temp$0 = this.<com.webc.htmlUtils.LinkExtractor: int URLcount>;
        return temp$0;
    }

    public void setURLcount(int)
    {
        com.webc.htmlUtils.LinkExtractor this;
        int URLcount;

        this := @this: com.webc.htmlUtils.LinkExtractor;
        URLcount := @parameter0: int;
        this.<com.webc.htmlUtils.LinkExtractor: int URLcount> = URLcount;
        return;
    }

    public java.lang.String getHtmlpage()
    {
        com.webc.htmlUtils.LinkExtractor this;
        java.lang.String temp$0;

        this := @this: com.webc.htmlUtils.LinkExtractor;
        temp$0 = this.<com.webc.htmlUtils.LinkExtractor: java.lang.String htmlpage>;
        return temp$0;
    }

    public void setHtmlpage(java.lang.String)
    {
        com.webc.htmlUtils.LinkExtractor this;
        java.lang.String htmlpage;

        this := @this: com.webc.htmlUtils.LinkExtractor;
        htmlpage := @parameter0: java.lang.String;
        this.<com.webc.htmlUtils.LinkExtractor: java.lang.String htmlpage> = htmlpage;
        return;
    }

    public void findlinks()
    {
        com.webc.htmlUtils.LinkExtractor this;
        int stPt, endPt, temp$4, temp$5, temp$7, temp$8, temp$9, temp$11, temp$13, temp$15, temp$17, temp$21, temp$22, temp$23, temp$27, temp$32, temp$33, temp$34, temp$36, temp$37, temp$38, temp$46;
        java.lang.String temp, temp$2, temp$3, temp$6, temp$10, temp$14, temp$20, temp$24, temp$25, temp$26, temp$29, temp$30, temp$31, temp$35, temp$41, temp$42, temp$43, temp$47, temp$48, temp$49, temp$50, temp$51;
        java.io.PrintStream temp$0, temp$18, temp$28, temp$39, temp$44;
        java.lang.StringBuffer temp$1, temp$19, temp$40, temp$45;
        char temp$12, temp$16;

        this := @this: com.webc.htmlUtils.LinkExtractor;
        stPt = 0;
        endPt = 0;
        temp = "";

     label0:
        nop;
        if stPt != -1 goto label1;

        goto label17;

     label1:
        nop;
        temp$0 = <java.lang.System: java.io.PrintStream out>;
        temp$1 = new java.lang.StringBuffer;
        specialinvoke temp$1.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("1>s,e=");
        virtualinvoke temp$1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(stPt);
        virtualinvoke temp$1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(",");
        virtualinvoke temp$1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(endPt);
        temp$2 = virtualinvoke temp$1.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke temp$0.<java.io.PrintStream: void println(java.lang.String)>(temp$2);
        temp$3 = this.<com.webc.htmlUtils.LinkExtractor: java.lang.String htmlpage>;
        temp$4 = virtualinvoke temp$3.<java.lang.String: int indexOf(java.lang.String,int)>("href=", stPt);
        stPt = temp$4;
        if temp$4 == -1 goto label2;

        goto label3;

     label2:
        nop;
        goto label17;

     label3:
        nop;
        temp$5 = stPt;
        temp$6 = "href=";
        temp$7 = virtualinvoke temp$6.<java.lang.String: int length()>();
        temp$8 = temp$5 + temp$7;
        temp$9 = temp$8 + 1;
        stPt = temp$9;
        temp$10 = this.<com.webc.htmlUtils.LinkExtractor: java.lang.String htmlpage>;
        temp$11 = stPt - 1;
        temp$12 = virtualinvoke temp$10.<java.lang.String: char charAt(int)>(temp$11);
        temp$13 = (int) temp$12;
        if temp$13 != 39 goto label4;

        goto label11;

     label4:
        nop;
        temp$14 = this.<com.webc.htmlUtils.LinkExtractor: java.lang.String htmlpage>;
        temp$15 = stPt - 1;
        temp$16 = virtualinvoke temp$14.<java.lang.String: char charAt(int)>(temp$15);
        temp$17 = (int) temp$16;
        if temp$17 != 34 goto label5;

        goto label11;

        goto label5;

     label5:
        nop;
        temp$18 = <java.lang.System: java.io.PrintStream out>;
        temp$19 = new java.lang.StringBuffer;
        specialinvoke temp$19.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("NOT A VALID LINK----------------------[");
        temp$20 = this.<com.webc.htmlUtils.LinkExtractor: java.lang.String htmlpage>;
        temp$21 = stPt - 6;
        temp$22 = stPt;
        temp$23 = temp$22 + 2;
        temp$24 = virtualinvoke temp$20.<java.lang.String: java.lang.String substring(int,int)>(temp$21, temp$23);
        virtualinvoke temp$19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$24);
        virtualinvoke temp$19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(" ...]");
        temp$25 = virtualinvoke temp$19.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke temp$18.<java.io.PrintStream: void println(java.lang.String)>(temp$25);
        if stPt != -1 goto label6;

        goto label10;

     label6:
        nop;
        if endPt != -1 goto label7;

        goto label10;

        goto label7;

     label7:
        nop;
        if stPt < endPt goto label8;

        goto label10;

        goto label8;

     label8:
        nop;
        temp$26 = this.<com.webc.htmlUtils.LinkExtractor: java.lang.String htmlpage>;
        temp$27 = virtualinvoke temp$26.<java.lang.String: int length()>();
        if endPt < temp$27 goto label9;

        goto label10;

        goto label9;

     label9:
        nop;
        temp$28 = <java.lang.System: java.io.PrintStream out>;
        temp$29 = this.<com.webc.htmlUtils.LinkExtractor: java.lang.String htmlpage>;
        temp$30 = virtualinvoke temp$29.<java.lang.String: java.lang.String substring(int,int)>(stPt, endPt);
        virtualinvoke temp$28.<java.io.PrintStream: void println(java.lang.String)>(temp$30);

     label10:
        nop;
        goto label16;

     label11:
        nop;
        temp$31 = this.<com.webc.htmlUtils.LinkExtractor: java.lang.String htmlpage>;
        temp$32 = stPt;
        temp$33 = temp$32 + 1;
        temp$34 = virtualinvoke temp$31.<java.lang.String: int indexOf(java.lang.String,int)>("\"", temp$33);
        endPt = temp$34;
        if temp$34 == -1 goto label12;

        goto label15;

     label12:
        nop;
        temp$35 = this.<com.webc.htmlUtils.LinkExtractor: java.lang.String htmlpage>;
        temp$36 = stPt;
        temp$37 = temp$36 + 1;
        temp$38 = virtualinvoke temp$35.<java.lang.String: int indexOf(java.lang.String,int)>("\'", temp$37);
        endPt = temp$38;
        if temp$38 == -1 goto label13;

        goto label14;

     label13:
        nop;

     label14:
        nop;

     label15:
        nop;
        temp$39 = <java.lang.System: java.io.PrintStream out>;
        temp$40 = new java.lang.StringBuffer;
        specialinvoke temp$40.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$40.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("2>s,e=");
        virtualinvoke temp$40.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(stPt);
        virtualinvoke temp$40.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(",");
        virtualinvoke temp$40.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(endPt);
        temp$41 = virtualinvoke temp$40.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke temp$39.<java.io.PrintStream: void println(java.lang.String)>(temp$41);
        temp$42 = this.<com.webc.htmlUtils.LinkExtractor: java.lang.String htmlpage>;
        temp$43 = virtualinvoke temp$42.<java.lang.String: java.lang.String substring(int,int)>(stPt, endPt);
        temp = temp$43;
        temp$44 = <java.lang.System: java.io.PrintStream out>;
        temp$45 = new java.lang.StringBuffer;
        specialinvoke temp$45.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$45.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("----LINK#[");
        temp$46 = this.<com.webc.htmlUtils.LinkExtractor: int URLcount>;
        virtualinvoke temp$45.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(temp$46);
        virtualinvoke temp$45.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("]==[");
        virtualinvoke temp$45.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(stPt);
        virtualinvoke temp$45.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("][");
        virtualinvoke temp$45.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(endPt);
        virtualinvoke temp$45.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("]:");
        temp$47 = this.<com.webc.htmlUtils.LinkExtractor: java.lang.String htmlpage>;
        temp$48 = virtualinvoke temp$47.<java.lang.String: java.lang.String substring(int,int)>(stPt, endPt);
        virtualinvoke temp$45.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$48);
        temp$49 = virtualinvoke temp$45.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke temp$44.<java.io.PrintStream: void println(java.lang.String)>(temp$49);
        temp$50 = this.<com.webc.htmlUtils.LinkExtractor: java.lang.String htmlpage>;
        temp$51 = virtualinvoke temp$50.<java.lang.String: java.lang.String substring(int,int)>(stPt, endPt);
        virtualinvoke this.<com.webc.htmlUtils.LinkExtractor: void enlistURL(java.lang.String)>(temp$51);

     label16:
        nop;
        goto label0;

     label17:
        nop;
        return;
    }

    void ValidateAllLinks()
    {
        com.webc.htmlUtils.LinkExtractor this;
        java.net.URL tempurl, temp$14, temp$16, temp$33, temp$37, temp$39, temp$68;
        java.lang.Object[] objlst, temp$1, temp$4;
        java.util.ArrayList temp$0, newlst, temp$2, temp$64, temp$67, temp$77, temp$82, temp$85;
        int tempInt, NoOfParent, i, temp$3, temp$5, temp$18, temp$19, temp$20, temp$24, temp$26, temp$27, temp$28, temp$29, temp$42, temp$44, temp$49, temp$51, temp$53, temp$54, temp$55, temp$57, temp$58, temp$80, temp$81, i, temp$83, temp$89, temp$90, temp$95;
        java.lang.String tempStr, temp$7, temp$10, temp$11, currentDirPath, temp$15, temp$17, temp$21, temp$25, temp$34, temp$35, temp$38, temp$40, temp$41, temp$43, temp$45, temp$48, temp$50, temp$52, temp$56, temp$60, temp$63, temp$66, temp$69, temp$74, temp$79, temp$87, temp$88, temp$96;
        java.lang.Object temp$6, temp$65, temp$78, temp$86;
        java.io.PrintStream temp$8, temp$31, temp$46, temp$61, temp$91;
        java.lang.StringBuffer temp$9, temp$32, temp$36, temp$47, temp$59, temp$62, temp$92;
        boolean temp$12, temp$13, temp$22, temp$23, temp$30, temp$70;
        java.lang.Exception ex;
        java.lang.Class temp$71, temp$72, temp$73;
        java.util.logging.Logger temp$75;
        java.util.logging.Level temp$76;
        com.webc.utils.QueueManager temp$84, temp$93;
        java.util.Queue temp$94;

        this := @this: com.webc.htmlUtils.LinkExtractor;
        temp$0 = this.<com.webc.htmlUtils.LinkExtractor: java.util.ArrayList arrLstURL>;
        temp$1 = virtualinvoke temp$0.<java.util.ArrayList: java.lang.Object[] toArray()>();
        objlst = temp$1;
        temp$2 = new java.util.ArrayList;
        specialinvoke temp$2.<java.util.ArrayList: void <init>()>();
        newlst = temp$2;
        NoOfParent = 0;
        i = 0;

     label0:
        nop;
        temp$3 = lengthof objlst;
        if i < temp$3 goto label1;

        goto label27;

     label1:
        nop;
        temp$4 = objlst;
        temp$5 = i;
        temp$6 = temp$4[temp$5];
        temp$7 = virtualinvoke temp$6.<java.lang.Object: java.lang.String toString()>();
        tempStr = temp$7;
        temp$8 = <java.lang.System: java.io.PrintStream out>;
        temp$9 = new java.lang.StringBuffer;
        specialinvoke temp$9.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("VALIDATING URL#");
        virtualinvoke temp$9.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i);
        virtualinvoke temp$9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(":");
        virtualinvoke temp$9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(tempStr);
        temp$10 = virtualinvoke temp$9.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke temp$8.<java.io.PrintStream: void println(java.lang.String)>(temp$10);
        temp$11 = virtualinvoke tempStr.<java.lang.String: java.lang.String toLowerCase()>();
        temp$12 = virtualinvoke tempStr.<java.lang.String: boolean startsWith(java.lang.String)>("http://");
        if temp$12 == 0 goto label2;

        goto label21;

     label2:
        nop;
        temp$13 = virtualinvoke tempStr.<java.lang.String: boolean startsWith(java.lang.String)>("https://");
        if temp$13 == 0 goto label3;

        goto label21;

        goto label3;

     label3:
        nop;
        temp$14 = this.<com.webc.htmlUtils.LinkExtractor: java.net.URL parentURL>;
        temp$15 = virtualinvoke temp$14.<java.net.URL: java.lang.String toString()>();
        temp$16 = this.<com.webc.htmlUtils.LinkExtractor: java.net.URL parentURL>;
        temp$17 = virtualinvoke temp$16.<java.net.URL: java.lang.String toString()>();
        temp$18 = virtualinvoke temp$17.<java.lang.String: int lastIndexOf(java.lang.String)>("/");
        temp$19 = temp$18;
        temp$20 = temp$19 + 1;
        temp$21 = virtualinvoke temp$15.<java.lang.String: java.lang.String substring(int,int)>(0, temp$20);
        currentDirPath = temp$21;
        temp$22 = virtualinvoke tempStr.<java.lang.String: boolean startsWith(java.lang.String)>("..");
        if temp$22 == 0 goto label8;

        goto label4;

     label4:
        nop;

     label5:
        nop;
        temp$23 = virtualinvoke tempStr.<java.lang.String: boolean startsWith(java.lang.String)>("..");
        if temp$23 == 0 goto label7;

        goto label6;

     label6:
        nop;
        temp$24 = virtualinvoke tempStr.<java.lang.String: int length()>();
        temp$25 = virtualinvoke tempStr.<java.lang.String: java.lang.String substring(int,int)>(3, temp$24);
        tempStr = temp$25;
        temp$26 = NoOfParent;
        temp$27 = temp$26 + 1;
        NoOfParent = temp$27;
        goto label5;

     label7:
        nop;
        temp$28 = NoOfParent;
        temp$29 = temp$28 + -1;
        NoOfParent = temp$29;
        goto label17;

     label8:
        nop;
        temp$30 = virtualinvoke tempStr.<java.lang.String: boolean startsWith(java.lang.String)>("/");
        if temp$30 == 0 goto label10;

        goto label9;

     label9:
        nop;
        temp$31 = <java.lang.System: java.io.PrintStream out>;
        temp$32 = new java.lang.StringBuffer;
        specialinvoke temp$32.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("parent url==");
        temp$33 = this.<com.webc.htmlUtils.LinkExtractor: java.net.URL parentURL>;
        temp$34 = virtualinvoke temp$33.<java.net.URL: java.lang.String toString()>();
        virtualinvoke temp$32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$34);
        temp$35 = virtualinvoke temp$32.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke temp$31.<java.io.PrintStream: void println(java.lang.String)>(temp$35);
        temp$36 = new java.lang.StringBuffer;
        specialinvoke temp$36.<java.lang.StringBuffer: void <init>()>();
        temp$37 = this.<com.webc.htmlUtils.LinkExtractor: java.net.URL parentURL>;
        temp$38 = virtualinvoke temp$37.<java.net.URL: java.lang.String getProtocol()>();
        virtualinvoke temp$36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$38);
        virtualinvoke temp$36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("://");
        temp$39 = this.<com.webc.htmlUtils.LinkExtractor: java.net.URL parentURL>;
        temp$40 = virtualinvoke temp$39.<java.net.URL: java.lang.String getHost()>();
        virtualinvoke temp$36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$40);
        virtualinvoke temp$36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(tempStr);
        temp$41 = virtualinvoke temp$36.<java.lang.StringBuffer: java.lang.String toString()>();
        tempStr = temp$41;
        goto label16;

     label10:
        nop;
        temp$42 = virtualinvoke tempStr.<java.lang.String: int indexOf(java.lang.String)>("#");
        tempInt = temp$42;
        if temp$42 != -1 goto label11;

        goto label12;

     label11:
        nop;
        temp$43 = virtualinvoke tempStr.<java.lang.String: java.lang.String substring(int,int)>(0, tempInt);
        tempStr = temp$43;
        goto label15;

     label12:
        nop;
        temp$44 = virtualinvoke tempStr.<java.lang.String: int indexOf(java.lang.String)>("?");
        tempInt = temp$44;
        if temp$44 != -1 goto label13;

        goto label14;

     label13:
        nop;
        temp$45 = virtualinvoke tempStr.<java.lang.String: java.lang.String substring(int,int)>(0, tempInt);
        tempStr = temp$45;

     label14:
        nop;

     label15:
        nop;

     label16:
        nop;

     label17:
        nop;

     label18:
        nop;
        if NoOfParent != 0 goto label19;

        goto label20;

     label19:
        nop;
        temp$46 = <java.lang.System: java.io.PrintStream out>;
        temp$47 = new java.lang.StringBuffer;
        specialinvoke temp$47.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$47.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("NoOfParent==");
        virtualinvoke temp$47.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(NoOfParent);
        virtualinvoke temp$47.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("currentDirPath==");
        virtualinvoke temp$47.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(currentDirPath);
        temp$48 = virtualinvoke temp$47.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke temp$46.<java.io.PrintStream: void println(java.lang.String)>(temp$48);
        temp$49 = virtualinvoke currentDirPath.<java.lang.String: int lastIndexOf(java.lang.String)>("/");
        temp$50 = virtualinvoke currentDirPath.<java.lang.String: java.lang.String substring(int,int)>(0, temp$49);
        currentDirPath = temp$50;
        temp$51 = virtualinvoke currentDirPath.<java.lang.String: int lastIndexOf(java.lang.String)>("/");
        temp$52 = virtualinvoke currentDirPath.<java.lang.String: java.lang.String substring(int,int)>(0, temp$51);
        currentDirPath = temp$52;
        temp$53 = virtualinvoke currentDirPath.<java.lang.String: int lastIndexOf(java.lang.String)>("/");
        temp$54 = temp$53;
        temp$55 = temp$54 + 1;
        temp$56 = virtualinvoke currentDirPath.<java.lang.String: java.lang.String substring(int,int)>(0, temp$55);
        currentDirPath = temp$56;
        nop;
        temp$57 = NoOfParent;
        temp$58 = temp$57 + -1;
        NoOfParent = temp$58;
        goto label18;

     label20:
        nop;
        temp$59 = new java.lang.StringBuffer;
        specialinvoke temp$59.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$59.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(currentDirPath);
        virtualinvoke temp$59.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(tempStr);
        temp$60 = virtualinvoke temp$59.<java.lang.StringBuffer: java.lang.String toString()>();
        tempStr = temp$60;
        temp$61 = <java.lang.System: java.io.PrintStream out>;
        temp$62 = new java.lang.StringBuffer;
        specialinvoke temp$62.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$62.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("THE NEW URL = ");
        virtualinvoke temp$62.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(tempStr);
        temp$63 = virtualinvoke temp$62.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke temp$61.<java.io.PrintStream: void println(java.lang.String)>(temp$63);
        temp$64 = this.<com.webc.htmlUtils.LinkExtractor: java.util.ArrayList arrLstURL>;
        temp$65 = virtualinvoke temp$64.<java.util.ArrayList: java.lang.Object remove(int)>(i);
        temp$66 = (java.lang.String) temp$65;
        temp$67 = this.<com.webc.htmlUtils.LinkExtractor: java.util.ArrayList arrLstURL>;
        virtualinvoke temp$67.<java.util.ArrayList: void add(int,java.lang.Object)>(i, tempStr);

     label21:
        nop;

     label22:
        nop;
        temp$68 = new java.net.URL;
        specialinvoke temp$68.<java.net.URL: void <init>(java.lang.String)>(tempStr);
        tempurl = temp$68;
        temp$69 = virtualinvoke tempurl.<java.net.URL: java.lang.String getQuery()>();
        temp$70 = virtualinvoke newlst.<java.util.ArrayList: boolean add(java.lang.Object)>(temp$69);
        goto label26;

     label23:
        nop;
        ex := @caughtexception;
        temp$72 = <com.webc.htmlUtils.LinkExtractor: java.lang.Class class$com$webc$htmlUtils$LinkExtractor>;
        if temp$72 != null goto label24;

        temp$73 = staticinvoke <com.webc.htmlUtils.LinkExtractor: java.lang.Class class$(java.lang.String)>("com.webc.htmlUtils.LinkExtractor");
        <com.webc.htmlUtils.LinkExtractor: java.lang.Class class$com$webc$htmlUtils$LinkExtractor> = temp$73;
        temp$71 = temp$73;
        goto label25;

     label24:
        nop;
        temp$71 = <com.webc.htmlUtils.LinkExtractor: java.lang.Class class$com$webc$htmlUtils$LinkExtractor>;

     label25:
        nop;
        temp$74 = virtualinvoke temp$71.<java.lang.Class: java.lang.String getName()>();
        temp$75 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>(temp$74);
        temp$76 = <java.util.logging.Level: java.util.logging.Level SEVERE>;
        virtualinvoke temp$75.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>(temp$76, null, ex);
        virtualinvoke ex.<java.lang.Exception: void printStackTrace()>();
        temp$77 = this.<com.webc.htmlUtils.LinkExtractor: java.util.ArrayList arrLstURL>;
        temp$78 = virtualinvoke temp$77.<java.util.ArrayList: java.lang.Object remove(int)>(i);
        temp$79 = (java.lang.String) temp$78;
        nop;
        goto label26;

     label26:
        nop;
        nop;
        temp$80 = i;
        temp$81 = temp$80 + 1;
        i = temp$81;
        goto label0;

     label27:
        nop;
        i = 0;

     label28:
        nop;
        temp$82 = this.<com.webc.htmlUtils.LinkExtractor: java.util.ArrayList arrLstURL>;
        temp$83 = virtualinvoke temp$82.<java.util.ArrayList: int size()>();
        if i < temp$83 goto label29;

        goto label30;

     label29:
        nop;
        temp$84 = this.<com.webc.htmlUtils.LinkExtractor: com.webc.utils.QueueManager qm>;
        temp$85 = this.<com.webc.htmlUtils.LinkExtractor: java.util.ArrayList arrLstURL>;
        temp$86 = virtualinvoke temp$85.<java.util.ArrayList: java.lang.Object get(int)>(i);
        temp$87 = (java.lang.String) temp$86;
        temp$88 = virtualinvoke temp$87.<java.lang.String: java.lang.String toString()>();
        virtualinvoke temp$84.<com.webc.utils.QueueManager: void AddUrl(java.lang.String)>(temp$88);
        nop;
        temp$89 = i;
        temp$90 = temp$89 + 1;
        i = temp$90;
        goto label28;

     label30:
        nop;
        temp$91 = <java.lang.System: java.io.PrintStream out>;
        temp$92 = new java.lang.StringBuffer;
        specialinvoke temp$92.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$92.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("URL QUEUE SIZE ==");
        temp$93 = this.<com.webc.htmlUtils.LinkExtractor: com.webc.utils.QueueManager qm>;
        temp$94 = virtualinvoke temp$93.<com.webc.utils.QueueManager: java.util.Queue getQueue()>();
        temp$95 = interfaceinvoke temp$94.<java.util.Queue: int size()>();
        virtualinvoke temp$92.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(temp$95);
        temp$96 = virtualinvoke temp$92.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke temp$91.<java.io.PrintStream: void println(java.lang.String)>(temp$96);
        return;

        catch java.lang.Exception from label22 to label23 with label23;
    }

    private final void enlistURL(java.lang.String)
    {
        com.webc.htmlUtils.LinkExtractor this;
        java.lang.String newURL, temp$5, temp$6, temp$10, temp$11;
        java.util.ArrayList temp$0;
        boolean temp$1;
        java.io.PrintStream temp$2;
        java.lang.StringBuffer temp$3, temp$8;
        java.net.URL temp$4, temp$9;
        com.webc.databaseUtils.DataBaseManager temp$7;
        int temp$12, temp$13;

        this := @this: com.webc.htmlUtils.LinkExtractor;
        newURL := @parameter0: java.lang.String;
        temp$0 = this.<com.webc.htmlUtils.LinkExtractor: java.util.ArrayList arrLstURL>;
        temp$1 = virtualinvoke temp$0.<java.util.ArrayList: boolean add(java.lang.Object)>(newURL);
        temp$2 = <java.lang.System: java.io.PrintStream out>;
        temp$3 = new java.lang.StringBuffer;
        specialinvoke temp$3.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("LINK PAIR = ");
        temp$4 = this.<com.webc.htmlUtils.LinkExtractor: java.net.URL parentURL>;
        temp$5 = virtualinvoke temp$4.<java.net.URL: java.lang.String toString()>();
        virtualinvoke temp$3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$5);
        virtualinvoke temp$3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(",");
        virtualinvoke temp$3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(newURL);
        temp$6 = virtualinvoke temp$3.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke temp$2.<java.io.PrintStream: void println(java.lang.String)>(temp$6);
        temp$7 = this.<com.webc.htmlUtils.LinkExtractor: com.webc.databaseUtils.DataBaseManager dbman>;
        temp$8 = new java.lang.StringBuffer;
        specialinvoke temp$8.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("INSERT INTO `webcrawler`.`src_dest_url` values(");
        temp$9 = this.<com.webc.htmlUtils.LinkExtractor: java.net.URL parentURL>;
        temp$10 = virtualinvoke temp$9.<java.net.URL: java.lang.String toString()>();
        virtualinvoke temp$8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$10);
        virtualinvoke temp$8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(",");
        virtualinvoke temp$8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(newURL);
        virtualinvoke temp$8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(");");
        temp$11 = virtualinvoke temp$8.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke temp$7.<com.webc.databaseUtils.DataBaseManager: void executeInsertQuery(java.lang.String)>(temp$11);
        temp$12 = this.<com.webc.htmlUtils.LinkExtractor: int URLcount>;
        temp$13 = temp$12 + 1;
        this.<com.webc.htmlUtils.LinkExtractor: int URLcount> = temp$13;
        return;
    }

    public com.webc.databaseUtils.DataBaseManager getDbman()
    {
        com.webc.htmlUtils.LinkExtractor this;
        com.webc.databaseUtils.DataBaseManager temp$0;

        this := @this: com.webc.htmlUtils.LinkExtractor;
        temp$0 = this.<com.webc.htmlUtils.LinkExtractor: com.webc.databaseUtils.DataBaseManager dbman>;
        return temp$0;
    }

    public void setDbman(com.webc.databaseUtils.DataBaseManager)
    {
        com.webc.htmlUtils.LinkExtractor this;
        com.webc.databaseUtils.DataBaseManager dbman;

        this := @this: com.webc.htmlUtils.LinkExtractor;
        dbman := @parameter0: com.webc.databaseUtils.DataBaseManager;
        this.<com.webc.htmlUtils.LinkExtractor: com.webc.databaseUtils.DataBaseManager dbman> = dbman;
        return;
    }

    public static java.lang.Class class$(java.lang.String)
    {
        java.lang.String name, temp$2;
        java.lang.Class temp$0;
        java.lang.ClassNotFoundException e;
        java.lang.NoClassDefFoundError temp$1;

        name := @parameter0: java.lang.String;

     label0:
        nop;
        temp$0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(name);

     label1:
        nop;
        return temp$0;

     label2:
        nop;
        e := @caughtexception;
        temp$1 = new java.lang.NoClassDefFoundError;
        temp$2 = virtualinvoke e.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();
        specialinvoke temp$1.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>(temp$2);
        throw temp$1;

        catch java.lang.ClassNotFoundException from label0 to label1 with label2;
    }
}
