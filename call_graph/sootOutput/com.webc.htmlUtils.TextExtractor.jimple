public class com.webc.htmlUtils.TextExtractor extends java.lang.Object
{
    private java.lang.String htmlpage;
    private java.lang.String htmltext;
    private java.lang.String InpUrl;
    private com.webc.databaseUtils.DataBaseManager dbman;

    public void <init>(java.lang.String, java.lang.String, com.webc.databaseUtils.DataBaseManager)
    {
        com.webc.htmlUtils.TextExtractor this;
        java.lang.String InpUrl, htmlpage;
        com.webc.databaseUtils.DataBaseManager dbman;

        this := @this: com.webc.htmlUtils.TextExtractor;
        InpUrl := @parameter0: java.lang.String;
        htmlpage := @parameter1: java.lang.String;
        dbman := @parameter2: com.webc.databaseUtils.DataBaseManager;
        specialinvoke this.<java.lang.Object: void <init>()>();
        this.<com.webc.htmlUtils.TextExtractor: java.lang.String htmlpage> = htmlpage;
        this.<com.webc.htmlUtils.TextExtractor: com.webc.databaseUtils.DataBaseManager dbman> = dbman;
        this.<com.webc.htmlUtils.TextExtractor: java.lang.String InpUrl> = InpUrl;
        return;
    }

    public void extracttext()
    {
        com.webc.htmlUtils.TextExtractor this;
        java.lang.String temp$0, temp$1, temp$2, temp$3, temp$4, temp$5, temp$6, temp$7, temp$8, temp$9, temp$10, temp$11, temp$12, temp$13, temp$14, temp$15, temp$16, temp$17, temp$20, temp$24, temp$25, temp$26;
        java.io.PrintStream temp$18, temp$19, temp$21;
        com.webc.databaseUtils.DataBaseManager temp$22;
        java.lang.StringBuffer temp$23;

        this := @this: com.webc.htmlUtils.TextExtractor;
        temp$0 = virtualinvoke this.<com.webc.htmlUtils.TextExtractor: java.lang.String getHtmlpage()>();
        temp$1 = virtualinvoke temp$0.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\r\n", " ");
        virtualinvoke this.<com.webc.htmlUtils.TextExtractor: void setHtmltext(java.lang.String)>(temp$1);
        temp$2 = virtualinvoke this.<com.webc.htmlUtils.TextExtractor: java.lang.String getHtmlpage()>();
        temp$3 = virtualinvoke temp$2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\&gt;", "");
        virtualinvoke this.<com.webc.htmlUtils.TextExtractor: void setHtmltext(java.lang.String)>(temp$3);
        temp$4 = virtualinvoke this.<com.webc.htmlUtils.TextExtractor: java.lang.String getHtmlpage()>();
        temp$5 = virtualinvoke temp$4.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\&nbsp;", "");
        virtualinvoke this.<com.webc.htmlUtils.TextExtractor: void setHtmltext(java.lang.String)>(temp$5);
        temp$6 = virtualinvoke this.<com.webc.htmlUtils.TextExtractor: java.lang.String getHtmlpage()>();
        temp$7 = virtualinvoke temp$6.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\&bull;", "");
        virtualinvoke this.<com.webc.htmlUtils.TextExtractor: void setHtmltext(java.lang.String)>(temp$7);
        temp$8 = virtualinvoke this.<com.webc.htmlUtils.TextExtractor: java.lang.String getHtmlpage()>();
        temp$9 = virtualinvoke temp$8.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\&raquo;", "");
        virtualinvoke this.<com.webc.htmlUtils.TextExtractor: void setHtmltext(java.lang.String)>(temp$9);
        temp$10 = virtualinvoke this.<com.webc.htmlUtils.TextExtractor: java.lang.String getHtmltext()>();
        temp$11 = virtualinvoke temp$10.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\<script.*?</script>", "");
        virtualinvoke this.<com.webc.htmlUtils.TextExtractor: void setHtmltext(java.lang.String)>(temp$11);
        temp$12 = virtualinvoke this.<com.webc.htmlUtils.TextExtractor: java.lang.String getHtmltext()>();
        temp$13 = virtualinvoke temp$12.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\<style .*?/style>", "");
        virtualinvoke this.<com.webc.htmlUtils.TextExtractor: void setHtmltext(java.lang.String)>(temp$13);
        temp$14 = virtualinvoke this.<com.webc.htmlUtils.TextExtractor: java.lang.String getHtmltext()>();
        temp$15 = virtualinvoke temp$14.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\<!--.*?-->", "");
        virtualinvoke this.<com.webc.htmlUtils.TextExtractor: void setHtmltext(java.lang.String)>(temp$15);
        temp$16 = virtualinvoke this.<com.webc.htmlUtils.TextExtractor: java.lang.String getHtmltext()>();
        temp$17 = virtualinvoke temp$16.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\<.*?>", "");
        virtualinvoke this.<com.webc.htmlUtils.TextExtractor: void setHtmltext(java.lang.String)>(temp$17);
        temp$18 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$18.<java.io.PrintStream: void println(java.lang.String)>("-----------------------------------------------------------------------------");
        temp$19 = <java.lang.System: java.io.PrintStream out>;
        temp$20 = virtualinvoke this.<com.webc.htmlUtils.TextExtractor: java.lang.String getHtmltext()>();
        virtualinvoke temp$19.<java.io.PrintStream: void println(java.lang.String)>(temp$20);
        temp$21 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$21.<java.io.PrintStream: void println(java.lang.String)>("-----------------------------------------------------------------------------");
        temp$22 = this.<com.webc.htmlUtils.TextExtractor: com.webc.databaseUtils.DataBaseManager dbman>;
        temp$23 = new java.lang.StringBuffer;
        specialinvoke temp$23.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("INSERT INTO `webcrawler`.`url_content`(url,text) value(\'");
        temp$24 = this.<com.webc.htmlUtils.TextExtractor: java.lang.String InpUrl>;
        virtualinvoke temp$23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$24);
        virtualinvoke temp$23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("\',\'");
        temp$25 = this.<com.webc.htmlUtils.TextExtractor: java.lang.String htmltext>;
        virtualinvoke temp$23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$25);
        virtualinvoke temp$23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("\');");
        temp$26 = virtualinvoke temp$23.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke temp$22.<com.webc.databaseUtils.DataBaseManager: void executeInsertQuery(java.lang.String)>(temp$26);
        return;
    }

    public java.lang.String getHtmlpage()
    {
        com.webc.htmlUtils.TextExtractor this;
        java.lang.String temp$0;

        this := @this: com.webc.htmlUtils.TextExtractor;
        temp$0 = this.<com.webc.htmlUtils.TextExtractor: java.lang.String htmlpage>;
        return temp$0;
    }

    public void setHtmlpage(java.lang.String)
    {
        com.webc.htmlUtils.TextExtractor this;
        java.lang.String htmlpage;

        this := @this: com.webc.htmlUtils.TextExtractor;
        htmlpage := @parameter0: java.lang.String;
        this.<com.webc.htmlUtils.TextExtractor: java.lang.String htmlpage> = htmlpage;
        return;
    }

    public java.lang.String getHtmltext()
    {
        com.webc.htmlUtils.TextExtractor this;
        java.lang.String temp$0;

        this := @this: com.webc.htmlUtils.TextExtractor;
        temp$0 = this.<com.webc.htmlUtils.TextExtractor: java.lang.String htmltext>;
        return temp$0;
    }

    public void setHtmltext(java.lang.String)
    {
        com.webc.htmlUtils.TextExtractor this;
        java.lang.String htmltext;

        this := @this: com.webc.htmlUtils.TextExtractor;
        htmltext := @parameter0: java.lang.String;
        this.<com.webc.htmlUtils.TextExtractor: java.lang.String htmltext> = htmltext;
        return;
    }

    public com.webc.databaseUtils.DataBaseManager getDbman()
    {
        com.webc.htmlUtils.TextExtractor this;
        com.webc.databaseUtils.DataBaseManager temp$0;

        this := @this: com.webc.htmlUtils.TextExtractor;
        temp$0 = this.<com.webc.htmlUtils.TextExtractor: com.webc.databaseUtils.DataBaseManager dbman>;
        return temp$0;
    }

    public void setDbman(com.webc.databaseUtils.DataBaseManager)
    {
        com.webc.htmlUtils.TextExtractor this;
        com.webc.databaseUtils.DataBaseManager dbman;

        this := @this: com.webc.htmlUtils.TextExtractor;
        dbman := @parameter0: com.webc.databaseUtils.DataBaseManager;
        this.<com.webc.htmlUtils.TextExtractor: com.webc.databaseUtils.DataBaseManager dbman> = dbman;
        return;
    }
}
